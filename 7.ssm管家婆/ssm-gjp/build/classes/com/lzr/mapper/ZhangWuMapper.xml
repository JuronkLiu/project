<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lzr.mapper.ZhangWuMapper" >
  <resultMap id="BaseResultMap" type="com.lzr.pojo.ZhangWu" >
    <id column="zwid" property="zwid" jdbcType="INTEGER" />
    <result column="flname" property="flname" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="zhangHu" property="zhanghu" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="DATE" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    zwid, flname, money, zhangHu, createtime, description
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lzr.pojo.ZhangWuExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zhang_wu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from zhang_wu
    where zwid = #{zwid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zhang_wu
    where zwid = #{zwid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lzr.pojo.ZhangWuExample" >
    delete from zhang_wu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lzr.pojo.ZhangWu" >
    insert into zhang_wu (zwid, flname, money, 
      zhangHu, createtime, description
      )
    values (#{zwid,jdbcType=INTEGER}, #{flname,jdbcType=VARCHAR}, #{money,jdbcType=DOUBLE}, 
      #{zhanghu,jdbcType=VARCHAR}, #{createtime,jdbcType=DATE}, #{description,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lzr.pojo.ZhangWu" >
    insert into zhang_wu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="zwid != null" >
        zwid,
      </if>
      <if test="flname != null" >
        flname,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="zhanghu != null" >
        zhangHu,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="zwid != null" >
        #{zwid,jdbcType=INTEGER},
      </if>
      <if test="flname != null" >
        #{flname,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="zhanghu != null" >
        #{zhanghu,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=DATE},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lzr.pojo.ZhangWuExample" resultType="java.lang.Integer" >
    select count(*) from zhang_wu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update zhang_wu
    <set >
      <if test="record.zwid != null" >
        zwid = #{record.zwid,jdbcType=INTEGER},
      </if>
      <if test="record.flname != null" >
        flname = #{record.flname,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.zhanghu != null" >
        zhangHu = #{record.zhanghu,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=DATE},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update zhang_wu
    set zwid = #{record.zwid,jdbcType=INTEGER},
      flname = #{record.flname,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DOUBLE},
      zhangHu = #{record.zhanghu,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=DATE},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lzr.pojo.ZhangWu" >
    update zhang_wu
    <set >
      <if test="flname != null" >
        flname = #{flname,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="zhanghu != null" >
        zhangHu = #{zhanghu,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=DATE},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where zwid = #{zwid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lzr.pojo.ZhangWu" >
    update zhang_wu
    set flname = #{flname,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      zhangHu = #{zhanghu,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=DATE},
      description = #{description,jdbcType=VARCHAR}
    where zwid = #{zwid,jdbcType=INTEGER}
  </update>
</mapper>